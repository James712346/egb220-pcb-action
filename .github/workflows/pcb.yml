name: PCB Gerber Generation
on:
  push:
    branches:
      - main

jobs:
  setup_matrix:
    runs-on: ubuntu-latest
    outputs:
      folders: ${{ steps.list_folders.outputs.folders }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: List project folders
        id: list_folders
        run: |
          echo "::set-output name=folders::$(find schematics -mindepth 1 -maxdepth 1 -type d | sed 's|^\./||' | jq -R -s -c 'split("\n")[:-1]')"
  

  generate_librePCB_gerber_files:
    needs: setup_matrix
    runs-on: ubuntu-latest
    container:
      image: librepcb/librepcb-cli:0.1.5
      options: --entrypoint /bin/bash
    strategy:
      matrix:
        folder: ${{fromJson(needs.setup_matrix.outputs.folders)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for LibrePCB project
        id: check_librepcb
        run: |
          if ls $folder/*.lpp 1> /dev/null 2>&1; then
            echo "is_librepcb=true" >> $GITHUB_OUTPUT
          else
            echo "is_librepcb=false" >> $GITHUB_OUTPUT
          fi
        env:
          folder: ${{ matrix.folder }}

      - name: Generate Gerber files for LibrePCB
        if: steps.check_librepcb.outputs.is_librepcb == 'true'
        run: |
          echo "Generating Gerber files for $folder (LibrePCB)"
          for project in $folder/*.lpp; do
            librepcb-cli open-project $project --export-pcb-fabrication-data /tmp/$folder
          done
        env:
          folder: ${{ matrix.folder }}

  generates_kidcad_gerber_files:
    needs: setup_matrix
    runs-on: ubuntu-latest
    container:
      image: kicad/kicad:5.1.10
      options: --entrypoint /bin/bash
    strategy:
      matrix:
        folder: ${{fromJson(needs.setup_matrix.outputs.folders)}}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check for KiCad project
        id: check_kicad
        run: |
          if ls $folder/*.kicad_pro 1> /dev/null 2>&1; then
            echo "is_kicad=true" >> $GITHUB_OUTPUT
          else
            echo "is_kicad=false" >> $GITHUB_OUTPUT
          fi
        env:
          folder: ${{ matrix.folder }}
      - name: Setup KiCad
        if: steps.check_kicad.outputs.is_kicad == 'true'
        run: |
          echo "Setting up KiCad for $folder"
          
        env:
          folder: ${{ matrix.folder }}

      - name: Generate Gerber files for KiCad
        if: steps.check_kicad.outputs.is_kicad == 'true'
        run: |
          echo "Generating Gerber files for $folder (KiCad)"
          # Run commands to generate Gerber files for KiCad
        env:
          folder: ${{ matrix.folder }}q
